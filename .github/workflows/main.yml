name: Kittigram workflows

defaults:
  run:
    shell: bash

on:
  push:
    branches:
    - main

env:
  SERVICE: kittygram
  POSTGRES_USER: postgres
  POSTGRES_DB: kittygram
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: 127.0.0.1
  POSTGRES_PORT: 5432
  POSTGRES_HOST_AUTH_METHOD: trust
  MODE: ci

jobs:
  lint_and_test_backend_service:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: make deps-dev

      - name: Run lint
        run: make backend-lint

      - name: Run test
        run: make backend-test

  build_and_push_images_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: lint_and_test_backend_service
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push backend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/${{ env.SERVICE }}_backend:latest

      - name: Push frontend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/${{ env.SERVICE }}_frontend:latest

      - name: Push gateway to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/${{ env.SERVICE }}_gateway:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_images_to_docker_hub
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.production.yml,docker-restart.sh"
          target: "."

      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo sh ./docker-restart.sh

  post_deploy_tests:
    runs-on: ubuntu-latest
    needs: deploy
    strategy:
      matrix:
        python-version: [ "3.9", "3.10" ]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: make deps-dev

      - name: Run tests
        run: make test

  send_message:
    runs-on: ubuntu-latest
    needs: post_deploy_tests
    steps:
      - name: send message
        continue-on-error: true
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} completed. Started by ${{ github.actor }}. Commit URL - https://github.com/${{ github.repository }}/commit/${{ github.sha }}
